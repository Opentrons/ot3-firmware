name: 'Code Coverage'
on:
  pull_request:
  push:
    branches:
      - 'edge'
  workflow_dispatch:

env:
  ci: 1

defaults:
  run:
    shell: bash


jobs:
  generate-coverage:
    name: 'Generate-Coverage'
    runs-on: 'ubuntu-20.04'
    timeout-minutes: 10
    env:
      CC: gcc-10
      CXX: g++-10
    steps:
      - run: |
          sudo apt update
          sudo apt install gcc-10 g++-10 lcov
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: 'Install lcov_cobertura module'
        run: pip install lcov_cobertura
      - uses: 'actions/checkout@v2'
        with:
          fetch-depth: 0
      - uses: "actions/cache@v2"
        with:
          path: "./stm32-tools"
          key: ${{ runner.os }}-${{ hashFiles('**/cmake/*') }}-${{ secrets.CACHE_VERSION }}
      - name: 'Configure'
        run: cmake --preset=host-gcc10 -DENABLE_COVERAGE=On -DCMAKE_BUILD_TYPE=Debug
      - name: 'Run all tests'
        run: cmake --build --preset tests
      - name: 'Generate coverage'
        run: cmake --build --preset tests --target lcov-geninfo
      - name: 'Convert coverage to xml'
        run: lcov_cobertura build-host/lcov/data/capture/all_targets.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          name: codecov-ot3-firmware
          fail_ci_if_error: true
