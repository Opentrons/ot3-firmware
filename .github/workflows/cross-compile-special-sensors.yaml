name: "cross-compile/format/lint all targets"
on:
  push:
    branches:
      - "*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash
    working-directory: ot3-firmware

jobs:
  build-cross:
    runs-on: "ubuntu-20.04"
    timeout-minutes: 20
    strategy:
      matrix:
        target: [
          pipettes-single,
          pipettes-multi,
          pipettes-96,
        ]
      fail-fast: false
    name: Build ${{ matrix.target }}
    steps:
      - name: Checkout ot3-firmware repo
        uses: actions/checkout@v4
        with:
          path: ot3-firmware

      - name: Checkout github actions directory
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/actions
          sparse-checkout-cone-mode: false
          path: actions

      - name: Setup main
        uses: ./actions/.github/actions/main-setup
        with:
          cache-version: ${{ secrets.CACHE_VERSION }}

      - name: Configure
        run: cmake --preset=cross . -DUSE_PRESSURE_MOVE

      - name: Build all STM32G4 applications
        run: cmake --build --preset=${{ matrix.target }} --target ${{ matrix.target }}-images ${{ matrix.target }}-applications

  format:
    runs-on: "ubuntu-20.04"
    timeout-minutes: 20
    name: Formatting
    steps:
      - name: Checkout ot3-firmware repo
        uses: actions/checkout@v4
        with:
          path: ot3-firmware

      - name: Checkout github actions directory
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/actions
          sparse-checkout-cone-mode: false
          path: actions

      - name: Setup main
        uses: ./actions/.github/actions/main-setup
        with:
          cache-version: ${{ secrets.CACHE_VERSION }}

      - name: Configure
        run: cmake --preset=cross . -DUSE_PRESSURE_MOVE

      - name: Format
        run: cmake --build ./build-cross --target format-ci

  lint:
    runs-on: "ubuntu-20.04"
    timeout-minutes: 20
    name: ${{ matrix.target }} lint
    strategy:
      matrix:
        target: [
          pipettes,
        ]
    steps:
      - name: Checkout ot3-firmware repo
        uses: actions/checkout@v4
        with:
          path: ot3-firmware

      - name: Checkout github actions directory
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/actions
          sparse-checkout-cone-mode: false
          path: actions

      - name: Setup main
        uses: ./actions/.github/actions/main-setup
        with:
          cache-version: ${{ secrets.CACHE_VERSION }}

      - name: Configure
        run: cmake --preset=cross . -DUSE_PRESSURE_MOVE

      - name: Format
        run: cmake --build ./build-cross --target ${{ matrix.target }}-lint
