name: "Gantry build/test"
on:
  pull_request:
    paths:
      - "gantry/**"
      - "common/**"
      - "include/**"
      - "spi/**"
      - "!include/pipettes/**"
      - "!include/head/**"
      - "cmake/*"
      - "!cmake/Arduino*"
      - "CMakeLists.txt"
      - "gantry/CMakeLists.txt"
      - "CMakePresets.json"
      - ".clang-format"
      - ".clang-tidy"
  push:
    paths:
      - "gantry/**"
      - "common/**"
      - "include/**"
      - "spi/**"
      - "!include/pipettes/**"
      - "!include/head/**"
      - "cmake/*"
      - "!cmake/Arduino*"
      - "CMakeLists.txt"
      - "gantry/CMakeLists.txt"
      - "CMakePresets.json"
      - ".clang-format"
      - ".clang-tidy"
      - ".github/workflows/gantry.yaml"
    branches:
      - "*"
    tags:
      - "gantry@*"
  workflow_dispatch:

env:
  ci: 1

defaults:
  run:
    shell: bash

jobs:
  cross-compile-check:
    name: "Cross-Compile/Check"
    runs-on: "ubuntu-20.04"
    timeout-minutes: 10
    steps:
      - uses: "actions/checkout@v2"
        with:
          fetch-depth: 0
      - uses: "actions/cache@v2"
        with:
          path: "./stm32-tools"
          key: ${{ runner.os }}-${{ hashFiles('**/cmake/*') }}-${{ secrets.CACHE_VERSION }}
      - name: "Configure"
        run: cmake --preset=cross . -DCMAKE_BUILD_TYPE=debug
      - name: "Format"
        run: cmake --build ./build-cross --target gantry-format-ci
      - name: "Build"
        run: cmake --build --preset=gantry --target gantry-images gantry-exes
      - name: "Lint"
        run: cmake --build ./build-cross --target gantry-lint
      - name: "Upload proto artifacts"
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: "gantry-proto-${{github.ref_name}}"
          path: |
            build-cross/gantry/firmware/*-proto-image*.hex
            build-cross/gantry/firmware/gantry-*-proto
      - name: "Upload rev1 artifacts"
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: "gantry-rev1-${{github.ref_name}}"
          path: |
            build-cross/gantry/firmware/*-rev1-image*.hex
            build-cross/gantry/firmware/gantry-*-rev1
      - name: "Upload default artifacts"
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: "gantry-${{github.ref_name}}"
          path: |
            build-cross/gantry/firmware/gantry-x
            build-cross/gantry/firmware/gantry-y
            build-cross/gantry/firmware/gantry-x-image.hex
            build-cross/gantry/firmware/gantry-y-image.hex


  host-compile-test:
    name: "Host-Compile/Test"
    runs-on: "ubuntu-20.04"
    timeout-minutes: 10
    steps:
      - run: |
          sudo apt update
          sudo apt install gcc-10 g++-10
      - uses: "actions/checkout@v2"
        with:
          fetch-depth: 0
      - uses: "actions/cache@v2"
        with:
          path: "./stm32-tools"
          key: ${{ runner.os }}-${{ hashFiles('**/cmake/*') }}-${{ secrets.CACHE_VERSION }}
      - name: "Configure"
        run: cmake --preset=host-gcc10 .
      - name: 'Build and test'
        run: cmake --build ./build-host --target gantry-build-and-test
      - name: 'Build X simulator'
        run: cmake --build ./build-host --target gantry-x-simulator
      - name: 'Build Y simulator'
        run: cmake --build ./build-host --target gantry-y-simulator
      - name: "Upload simulator artifacts"
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: "gantry-simulators-${{github.ref_name}}"
          path: |
            build-host/gantry/simulator/gantry-*-simulator
