name: "Gripper build/test"
on:
  pull_request:
    paths:
      - "gripper/**"
      - "common/**"
      - "can/**"
      - "spi/**"
      - "motor-control/**"
      - "include/**"
      - "!include/pipettes/**"
      - "!include/gantry/**"
      - "!include/head/**"
      - "cmake/*"
      - "!cmake/Arduino*"
      - "CMakeLists.txt"
      - "gripper/CMakeLists.txt"
      - "CMakePresets.json"
      - ".clang-format"
      - ".clang-tidy"
  push:
    paths:
      - "gripper/**"
      - "common/**"
      - "can/**"
      - "spi/**"
      - "motor-control/**"
      - "include/**"
      - "!include/pipettes/**"
      - "!include/gantry/**"
      - "!include/head/**"
      - "cmake/*"
      - "!cmake/Arduino*"
      - "CMakeLists.txt"
      - "gripper/CMakeLists.txt"
      - "CMakePresets.json"
      - ".clang-format"
      - ".clang-tidy"
      - ".github/workflows/gripper.yaml"
    branches:
      - "*"
    tags:
      - "gripper@*"
  workflow_dispatch:

env:
  ci: 1

defaults:
  run:
    shell: bash

jobs:
  cross-compile-check:
    name: "Cross-Compile/Check"
    runs-on: "ubuntu-20.04"
    timeout-minutes: 10
    steps:
      - uses: "actions/checkout@v2"
        with:
          fetch-depth: 0
      - uses: "actions/cache@v2"
        with:
          path: "./stm32-tools"
          key: ${{ runner.os }}-${{ hashFiles('**/cmake/*') }}-${{ secrets.CACHE_VERSION }}
      - name: "Configure"
        run: cmake --preset=cross . -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - name: "Format"
        run: cmake --build ./build-cross --target gripper-format-ci
      - name: "Build Proto"
        run: cmake --build ./build-cross --target gripper gripper-image-hex
      - name: "Build Rev1"
        run: cmake --build ./build-cross --target gripper gripper-rev1-image-hex
      - name: "Proto Lint"
        run: cmake --build ./build-cross --target gripper-proto-lint
      - name: "Rev1 Lint"
        run: cmake --build ./build-cross --target gripper-rev1-lint
      - name: "Upload artifacts"
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: "gripper-${{github.ref_name}}"
          path: |
            build-cross/gripper/firmware/gripper-proto
            build-cross/gripper/firmware/gripper-rev1
            build-cross/gripper/firmware/gripper-proto-image.hex
            build-cross/gripper/firmware/gripper-rev1-image.hex
  host-compile-test:
    name: "Host-Compile/Test"
    runs-on: "ubuntu-20.04"
    timeout-minutes: 10
    steps:
      - name: Update and install gcc-10 & g++-10
        run: |
          sudo apt update
          sudo apt install gcc-10 g++-10

      - name: Checkout ot3-firmware repository
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 0
          path: ot3-firmware

      - name: Checkout opentrons repository
        uses: actions/checkout@v3
        with:
          repository: "Opentrons/opentrons"
          path: opentrons
          fetch-depth: 0

      - name: Cache stm32-tools
        uses: "actions/cache@v2"
        with:
          path: "./stm32-tools"
          key: ${{ runner.os }}-${{ hashFiles('**/cmake/*') }}-${{ secrets.CACHE_VERSION }}

      - name: "Configure"
        run: cmake --preset=host-gcc10 .
        working-directory: ot3-firmware

      - name: 'Build and test'
        run: cmake --build ./build-host --target gripper-build-and-test
        working-directory: ot3-firmware

      - name: 'Setup state_manager'
        run: cmake --build ./build-host/ --target state-manager-setup
        working-directory: ot3-firmware

      - name: 'Build simulator'
        run: cmake --build ./build-host --target gripper-simulator
        working-directory: ot3-firmware

      - name: "Upload artifacts"
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: "gripper-simulator-${{github.ref_name}}"
          path: |
            build-host/gripper/simulator/gripper-simulator
