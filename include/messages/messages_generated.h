// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_MESSAGES_SERIALIZATION_H_
#define FLATBUFFERS_GENERATED_MESSAGES_SERIALIZATION_H_

#include "flatbuffers/flatbuffers.h"

namespace Serialization {

struct SetSpeed;

struct GetPosition;

struct Move;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) SetSpeed FLATBUFFERS_FINAL_CLASS {
 private:
  uint16_t speed_mm_second_;

 public:
  SetSpeed() {
    memset(static_cast<void *>(this), 0, sizeof(SetSpeed));
  }
  SetSpeed(uint16_t _speed_mm_second)
      : speed_mm_second_(flatbuffers::EndianScalar(_speed_mm_second)) {
  }
  uint16_t speed_mm_second() const {
    return flatbuffers::EndianScalar(speed_mm_second_);
  }
};
FLATBUFFERS_STRUCT_END(SetSpeed, 2);

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) GetPosition FLATBUFFERS_FINAL_CLASS {
 private:
  uint16_t position_;

 public:
  GetPosition() {
    memset(static_cast<void *>(this), 0, sizeof(GetPosition));
  }
  GetPosition(uint16_t _position)
      : position_(flatbuffers::EndianScalar(_position)) {
  }
  uint16_t position() const {
    return flatbuffers::EndianScalar(position_);
  }
};
FLATBUFFERS_STRUCT_END(GetPosition, 2);

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(2) Move FLATBUFFERS_FINAL_CLASS {
 private:
  uint16_t distance_mm_;

 public:
  Move() {
    memset(static_cast<void *>(this), 0, sizeof(Move));
  }
  Move(uint16_t _distance_mm)
      : distance_mm_(flatbuffers::EndianScalar(_distance_mm)) {
  }
  uint16_t distance_mm() const {
    return flatbuffers::EndianScalar(distance_mm_);
  }
};
FLATBUFFERS_STRUCT_END(Move, 2);

}  // namespace Serialization

#endif  // FLATBUFFERS_GENERATED_MESSAGES_SERIALIZATION_H_
